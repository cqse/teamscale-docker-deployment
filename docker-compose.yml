version: '3'

services:

  # The production Teamscale instance.
  v7.7:
    # This targets the latest 7.7 release. Altenatively use e.g. 'cqse/teamscale:7.7.0' to point to a specific release.
    image: 'cqse/teamscale:7.7.latest'
    restart: unless-stopped
    # The working directory within the docker container, where all data is stored.
    # This is different from the installation directory `/opt/teamscale`
    working_dir: /var/teamscale
    volumes:
      # Use the `v7.7` folder as working directory
      - ./v7.7/:/var/teamscale/
    environment:
      # The Teamscale memory limit (alternative to storing it in jvm.properties)
      TEAMSCALE_MEMORY: 4G
      # Overwrite settings from config/teamscale.properties
      TS_PROPERTIES: |-
        engine.workers=2
        instance.name=v7.7
      # Overwrite JVM options
      TEAMSCALE_OPTS: >-
        -Dcom.teamscale.mergerequest.disable-automatic-webhook-creation=true
        -Dcom.teamscale.enable-monitoring-uploads=true
        -Dcom.teamscale.commit-tree-timestamp-assertion=true
        -XX:HeapDumpPath=/var/teamscale/logs
        -XX:+HeapDumpOnOutOfMemoryError

  # The staging Teamscale instance.
  v7.8:
    image: 'cqse/teamscale:7.8.latest'
    restart: unless-stopped
    working_dir: /var/teamscale
    volumes:
      - ./v7.8/:/var/teamscale/
    environment:
      TEAMSCALE_MEMORY: 4G
      TS_PROPERTIES: |-
        engine.workers=2
        instance.name=v7.8

  # The nginx server that proxies the Teamscale instances
  nginx:
    image: 'nginx:alpine'
    restart: unless-stopped
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
    ports:
        - '80:80'
        - '443:443'

